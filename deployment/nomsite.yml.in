Resources:
  siteRR:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub "${nomsZone}."
      Name: !Sub '${publichostname}.'
      Type: CNAME
      TTL: 300
      ResourceRecords:
          - !ImportValue "ecs-dns"

  noms:
    Type: AWS::ECS::TaskDefinition
    Properties:
        Family: noms
        TaskRoleArn: !Ref nomsTaskRole
        ContainerDefinitions:
        - Name: noms-src
          Image: !Sub "corydodt/noms-src:${NOMSVERSION}"
          Memory: 1
          Essential: false
          Cpu: 0
        - Name: noms-main
          Image: !Sub "corydodt/noms-main:${NOMSVERSION}"
          VolumesFrom:
              - SourceContainer: noms-src
          Memory: 225
          PortMappings:
              - HostPort: !Ref proxyport
                ContainerPort: !Ref proxyport
                Protocol: tcp
          Essential: true
          Links:
              - mongo
          Command:
              - noms.circus.ini
          Cpu: 0
          Environment:
            - { Name: NOMS_DB_HOST, Value: !Ref NOMSDBHOST }
            - { Name: NOMS_VERSION, Value: !Ref NOMSVERSION }
        - Name: mongo
          Image: mongo
          Memory: 225
          Hostname: mongo
          Essential: true
          Cpu: 0
        - Name: nginx-letsencrypt-s3
          Image: !Sub "corydodt/nginx-letsencrypt-s3:${NOMSVERSION}"
          Memory: 50
          Essential: true
          PortMappings:
              - HostPort: '80'
                ContainerPort: '80'
                Protocol: tcp
              - HostPort: '443'
                ContainerPort: '443'
                Protocol: tcp
          Environment:
            - { Name: NOMS_DB_HOST, Value: !Ref NOMSDBHOST }
            - { Name: NOMS_VERSION, Value: !Ref NOMSVERSION }
            - { Name: certbot_email, Value: !Ref certbotemail }
            - { Name: certbot_flags, Value: !Ref certbotflags }
            - { Name: proxy_hostname, Value: !Ref proxyhostname }
            - { Name: proxy_port, Value: !Ref proxyport }
            - { Name: public_hostname, Value: !Ref publichostname }
          Links:
              - noms-main

  svcnoms:
    Type: AWS::ECS::Service
    Properties:
      TaskDefinition: !Ref noms
      Cluster: !ImportValue "ecs-cluster"
      DesiredCount: 1

Parameters:
{%- macro param(name, description) -%}
  {{ name | replace("_", "") }}:
    Type: String
    Default: "{{ __environ__[name] }}"
    Description: "{{ description }}"
{%- endmacro %}
  {{ param("public_hostname", 
  "Public hostname of the noms site.") }}

  {{ param("NOMS_VERSION", 
  "Source code tag of the version to build") }}

  {{ param("NOMS_DB_HOST", 
  "Hostname of the associated mongodb service") }}

  {{ param("certbot_email", 
  "Email address that will be used on LetsEncrypt certs") }}

  {{ param("certbot_flags", 
  "Extra certbot flags, e.g. --staging") }}

  {{ param("proxy_hostname", 
  "Hostname of the associated noms application container") }}

  {{ param("proxy_port", 
  "IPv4 port number of the associated noms application runtime") }}

  nomsZone: 
    Type: String
    Default: nomsbook.com
    Description: DNS zone used by the application

  nomsTaskRole: 
    Type: String
    Default: arn:aws:iam::337712362153:role/ecsTaskS3Everything
    Description: IAM role used by tasks

AWSTemplateFormatVersion: '2010-09-09'
